package edu.jncl.siwaunal1.modelo;
// Generated Aug 31, 2016 1:34:36 PM by Hibernate Tools 4.3.4.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Aspirante generated by hbm2java
 */
@Entity
@Table(name = "aspirante", schema = "public")
@NamedQueries({
	@NamedQuery(name="Aspirante.findAll", query="SELECT a FROM Aspirante a"),
	@NamedQuery(name="Aspirante.findByCedula", query="SELECT a FROM Aspirante a WHERE a.cedula = :cedula"),
})
public class Aspirante implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int cedula;
	private Ciudad ciudad;
	private Departamento departamento;
	private Programa programa;
	private Sede sede;
	private String nombres;
	private String apellidos;
	private boolean admitido;
	private char genero;
	private Date fechanacimiento;
	private Character estado;
	private Set<Log> logs = new HashSet<Log>(0);

	public Aspirante() {
	}

	public Aspirante(int cedula, String nombres, String apellidos, boolean admitido, char genero) {
		this.cedula = cedula;
		this.nombres = nombres;
		this.apellidos = apellidos;
		this.admitido = admitido;
		this.genero = genero;
	}

	public Aspirante(int cedula, Ciudad ciudad, Departamento departamento, Programa programa, Sede sede, String nombres,
			String apellidos, boolean admitido, char genero, Date fechanacimiento, Character estado, Set<Log> logs) {
		this.cedula = cedula;
		this.ciudad = ciudad;
		this.departamento = departamento;
		this.programa = programa;
		this.sede = sede;
		this.nombres = nombres;
		this.apellidos = apellidos;
		this.admitido = admitido;
		this.genero = genero;
		this.fechanacimiento = fechanacimiento;
		this.estado = estado;
		this.logs = logs;
	}

	@Id

	@Column(name = "cedula", unique = true, nullable = false)
	public int getCedula() {
		return this.cedula;
	}

	public void setCedula(int cedula) {
		this.cedula = cedula;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idciudadaspirante")
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddepartamentoaspirante")
	public Departamento getDepartamento() {
		return this.departamento;
	}

	public void setDepartamento(Departamento departamento) {
		this.departamento = departamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idprogramaaspirante")
	public Programa getPrograma() {
		return this.programa;
	}

	public void setPrograma(Programa programa) {
		this.programa = programa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idsedeaspirante")
	public Sede getSede() {
		return this.sede;
	}

	public void setSede(Sede sede) {
		this.sede = sede;
	}

	@Column(name = "nombres", nullable = false, length = 45)
	public String getNombres() {
		return this.nombres;
	}

	public void setNombres(String nombres) {
		this.nombres = nombres;
	}

	@Column(name = "apellidos", nullable = false, length = 45)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "admitido", nullable = false)
	public boolean isAdmitido() {
		return this.admitido;
	}

	public void setAdmitido(boolean admitido) {
		this.admitido = admitido;
	}

	@Column(name = "genero", nullable = false, length = 1)
	public char getGenero() {
		return this.genero;
	}

	public void setGenero(char genero) {
		this.genero = genero;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechanacimiento", length = 13)
	public Date getFechanacimiento() {
		return this.fechanacimiento;
	}

	public void setFechanacimiento(Date fechanacimiento) {
		this.fechanacimiento = fechanacimiento;
	}

	@Column(name = "estado", length = 1)
	public Character getEstado() {
		return this.estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aspirante")
	public Set<Log> getLogs() {
		return this.logs;
	}

	public void setLogs(Set<Log> logs) {
		this.logs = logs;
	}

}
